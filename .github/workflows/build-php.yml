name: Build PHP 8.0.x Docker images (prod & dev)

on: 
  push:
  schedule:
    - cron: '30 1 * * *'

jobs:
  set_missing_tags:
    runs-on: ubuntu-latest
    steps:
      - name: Download tags
        run: |
          curl -s 'https://semver-api.tomask.space/tag/tomaskubat/php-prod/missing?against=library/php&filter=^8\.0\.(\d%2B)-fpm-alpine$' > missing_tags.json
          ls -la missing_tags.json
          cat missing_tags.json | jq
      - id: missing_tags_json
        run: |
          JSON=$(cat missing_tags.json)
          echo "::set-output name=json::${JSON}"
      - id: newest_missing_tag
        run: |
          NEWEST=$(cat missing_tags.json | jq 'last')
          echo "::set-output name=newest::${NEWEST}"
      - id: count_missing_tag
        run: |
          COUNT=$(cat missing_tags.json | jq 'length')
          if [[ $COUNT == 0 ]]
          then 
            echo "::set-output name=is_empty::true"
          else 
            echo "::set-output name=is_empty::false"
          fi
          
    outputs:
      matrix: ${{ steps.missing_tags_json.outputs.json }}
      newest: ${{ steps.newest_missing_tag.outputs.newest }}
      is_empty: ${{ steps.count_missing_tag.outputs.is_empty }}

  build:
    runs-on: ubuntu-latest
    needs: set_missing_tags
    if: ${{ needs.set_missing_tags.outputs.is_empty == 'false' }}
    strategy:
      matrix: 
        tag: ${{ fromJson(needs.set_missing_tags.outputs.matrix) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Print processed tag
        run: |
          echo ${{ matrix.tag }}

      - name: Print latest tag
        run: |
          echo ${{ needs.set_missing_tags.outputs.newest }}

      - name: Prepare Dockerfiles
        run: |
          cd php/8.0/prod/fmp-alpine
          sed "s/8.0.0-fpm-alpine/${{ matrix.tag }}/" Dockerfile > Dockerfile.tagged
          cat Dockerfile.tagged
          cd ../../dev/fmp-alpine
          sed "s/8.0.0-fpm-alpine/${{ matrix.tag }}/" Dockerfile > Dockerfile.tagged
          cat Dockerfile.tagged

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push prod image
        id: docker_build_prod
        uses: docker/build-push-action@v2
        with:
          file: php/8.0/prod/fmp-alpine/Dockerfile.tagged
          context: php/8.0/prod/fmp-alpine
          push: true
          tags: tomaskubat/php-prod:${{ matrix.tag }}
          platforms: linux/amd64

      - name: Prod image digest
        run: echo ${{ steps.docker_build_prod.outputs.digest }}

      - name: Build and push dev image
        id: docker_build_dev
        uses: docker/build-push-action@v2
        with:
          file: php/8.0/dev/fmp-alpine/Dockerfile.tagged
          context: php/8.0/dev/fmp-alpine
          push: true
          tags: tomaskubat/php-dev:${{ matrix.tag }}
          platforms: linux/amd64

      - name: Dev image digest
        run: echo ${{ steps.docker_build_dev.outputs.digest }}

      - name: Tag latest
        run: |
          if [[ "${{ matrix.tag }}" == "${{ fromJson(needs.set_missing_tags.outputs.newest) }}" ]] 
          then 
            echo 'Taging as latest version'

            docker pull tomaskubat/php-prod@${{ steps.docker_build_prod.outputs.digest }}
            docker tag tomaskubat/php-prod@${{ steps.docker_build_prod.outputs.digest }} tomaskubat/php-prod:8.0.latest-fpm-alpine
            docker push tomaskubat/php-prod:8.0.latest-fpm-alpine

            docker pull tomaskubat/php-dev@${{ steps.docker_build_dev.outputs.digest }}
            docker tag tomaskubat/php-dev@${{ steps.docker_build_dev.outputs.digest }} tomaskubat/php-dev:8.0.latest-fpm-alpine
            docker push tomaskubat/php-dev:8.0.latest-fpm-alpine
          fi
