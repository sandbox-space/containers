name: Adminer 4.8 standalone (@on-push)

on:
  push:
    branches:
      - main
      - adminer_new
    paths:
      - 'adminer/**'
      - '.github/workflows/build-workflow.yml'
      - '.github/workflows/build-push-adminer-4.8-standalone.yml'

jobs:
  examine_tags:
    runs-on: ubuntu-latest
    steps:
      - id: examined_tags
        run: |
          curl -s -o newest_tag.json --header 'Authorization: ${{ secrets.SEMVER_API_TOKEN }}' 'https://sandbox-space-semver-api.deno.dev/tag/library/adminer/newest?filter=^4\.8\.(\d%2B)-standalone$'
          NEWEST_TAG=$(cat newest_tag.json | jq -c '.tags[0]')
          echo "NEWEST_TAG: $NEWEST_TAG"
          echo "newest_tag=${NEWEST_TAG}" >> "$GITHUB_OUTPUT"
          
          curl -s -o list_tags.json --header 'Authorization: ${{ secrets.SEMVER_API_TOKEN }}' 'https://sandbox-space-semver-api.deno.dev/tag/library/adminer/list?filter=^4\.8\.(\d%2B)-standalone$'
          LIST_TAGS=$(cat list_tags.json | jq -c '.tags')
          echo "LIST_TAGS: $LIST_TAGS"
          echo "list_tags=${LIST_TAGS}" >> "$GITHUB_OUTPUT"

          COUNT_TAGS=$(cat list_tags.json | jq '.tags' | jq 'length')
          echo "COUNT_TAGS: $COUNT_TAGS"
          echo "count_tags=${COUNT_TAGS}" >> "$GITHUB_OUTPUT"
    outputs:
      newest_tag: ${{ steps.examined_tags.outputs.newest_tag }}
      list_tags: ${{ steps.examined_tags.outputs.list_tags }}
      count_tags: ${{ steps.examined_tags.outputs.count_tags }}

  build_tag:
    needs: examine_tags
    if: ${{ needs.examine_tags.outputs.count_tags > 0 }}
    uses:  sandbox-space/containers/.github/workflows/build-workflow.yml@main
    with:
      what: "adminer"
      version: "4.8"
      environments: "prod"
      platform: "standalone"
      placeholder_tag_value: "4.8.0-standalone"
      build_tags: ${{ needs.examine_tags.outputs.list_tags }}
      newest_tag: ${{ needs.examine_tags.outputs.newest_tag }}
      push_repository_prefix: "sandboxspace/adminer"
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}